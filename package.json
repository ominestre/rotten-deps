{
  "name": "rotten-deps",
  "version": "1.0.0-beta-10",
  "description": "The command `npm outdated` only has two endpoints which are pass or fail. This dichotomy isn't very useful for CI flows which have pass, fail, or warn. This CLI utility combines `npm outdated` and `npm view` in order to establish a compliance period for dependency checks. This way if a dependency update is within your compliance period you can trigger a warn or if it's beyond your compliance period it can trigger a fail.",
  "main": "lib/index.js",
  "bin": "bin/rotten-deps.js",
  "repository": "https://github.com/ominestre/rotten-deps",
  "scripts": {
    "build": "npm run clean && tsc",
    "start": "npm run build && node ./bin/rotten-deps --config-path ./sample-config.json",
    "clean": "rimraf ./lib ./bin",
    "pretest": "(cd test/dummies/sample-app && npm install --no-audit)",
    "test": "mocha -r ts-node/register"
  },
  "author": {
    "name": "Mike Miller",
    "email": "ominestre@gmail.com"
  },
  "license": "MIT",
  "devDependencies": {
    "@babel/core": "~7.10.5",
    "@babel/preset-env": "~7.10.3",
    "@types/node": "~14.0.14",
    "@types/yargs": "~15.0.5",
    "@typescript-eslint/parser": "~3.7.1",
    "chai": "~4.2.0",
    "eslint": "~7.5.0",
    "eslint-config-airbnb-base": "~14.2.0",
    "eslint-plugin-import": "~2.22.0",
    "esm": "~3.2.25",
    "mocha": "~8.0.1",
    "rimraf": "~3.0.2",
    "sinon": "^9.0.2",
    "ts-node": "~8.10.2",
    "typescript": "~3.9.5"
  },
  "dependencies": {
    "cli-table": "~0.3.1",
    "yargs": "~15.4.1"
  }
}
